[{"/Users/christopherlijoodi/Desktop/CITYPARK/src/index.js":"1","/Users/christopherlijoodi/Desktop/CITYPARK/src/App.js":"2","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/SideNavBar.js":"3","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/SideMenu.js":"4","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/LoginDialog.js":"5","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SignIn.js":"6","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/MotoristPage.js":"7","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Home.js":"8","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Bookings.js":"9","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/About.js":"10","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Support.js":"11","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/MotoristDetails.js":"12","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/severity-pill.js":"13","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/UseForm.js":"14","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Controls.js":"15","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/MotoristService.js":"16","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/BookingTime.js":"17","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/BookingDate.js":"18","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Dropdown.js":"19","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/BasicSelect.js":"20","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/MuiButton.js":"21","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/http-common.js":"22","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/DatePicker.js":"23","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Checkbox.js":"24","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/MuiSelect.js":"25","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/RadioGroup.js":"26","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Input.js":"27","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Registration.js":"28","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Time.js":"29","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/ParkingLot.js":"30","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/ParkingLotService.js":"31","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/http-common.js":"32","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/PTable.js":"33","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/ParkingDetailService.js":"34","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/DataService.js":"35"},{"size":167,"mtime":1631970844000,"results":"36","hashOfConfig":"37"},{"size":164,"mtime":1637071181923,"results":"38","hashOfConfig":"37"},{"size":2388,"mtime":1637148501244,"results":"39","hashOfConfig":"37"},{"size":1120,"mtime":1637828316069,"results":"40","hashOfConfig":"37"},{"size":1632,"mtime":1637069484422,"results":"41","hashOfConfig":"37"},{"size":3013,"mtime":1637069484447,"results":"42","hashOfConfig":"37"},{"size":1041,"mtime":1637828290274,"results":"43","hashOfConfig":"37"},{"size":3903,"mtime":1637069493717,"results":"44","hashOfConfig":"37"},{"size":13890,"mtime":1638887820332,"results":"45","hashOfConfig":"37"},{"size":145,"mtime":1637069493711,"results":"46","hashOfConfig":"37"},{"size":151,"mtime":1637069493735,"results":"47","hashOfConfig":"37"},{"size":2936,"mtime":1637072078787,"results":"48","hashOfConfig":"37"},{"size":1272,"mtime":1637069484504,"results":"49","hashOfConfig":"37"},{"size":1123,"mtime":1637069484452,"results":"50","hashOfConfig":"37"},{"size":593,"mtime":1637314499124,"results":"51","hashOfConfig":"37"},{"size":1027,"mtime":1637069502344,"results":"52","hashOfConfig":"37"},{"size":685,"mtime":1637237953802,"results":"53","hashOfConfig":"37"},{"size":855,"mtime":1637069484463,"results":"54","hashOfConfig":"37"},{"size":2748,"mtime":1637069484476,"results":"55","hashOfConfig":"37"},{"size":1063,"mtime":1637227254302,"results":"56","hashOfConfig":"37"},{"size":658,"mtime":1637069484483,"results":"57","hashOfConfig":"37"},{"size":174,"mtime":1637069484501,"results":"58","hashOfConfig":"37"},{"size":1784,"mtime":1637319407888,"results":"59","hashOfConfig":"37"},{"size":648,"mtime":1637069484468,"results":"60","hashOfConfig":"37"},{"size":841,"mtime":1637069484494,"results":"61","hashOfConfig":"37"},{"size":863,"mtime":1637069484496,"results":"62","hashOfConfig":"37"},{"size":414,"mtime":1637069484478,"results":"63","hashOfConfig":"37"},{"size":7404,"mtime":1637152397655,"results":"64","hashOfConfig":"37"},{"size":726,"mtime":1637155682263,"results":"65","hashOfConfig":"37"},{"size":9033,"mtime":1637849914827,"results":"66","hashOfConfig":"37"},{"size":795,"mtime":1637606153215,"results":"67","hashOfConfig":"37"},{"size":253,"mtime":1637607840885,"results":"68","hashOfConfig":"37"},{"size":2726,"mtime":1637829194685,"results":"69","hashOfConfig":"37"},{"size":807,"mtime":1637851944336,"results":"70","hashOfConfig":"37"},{"size":269,"mtime":1638645930632,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"oi5nsi",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"74"},"/Users/christopherlijoodi/Desktop/CITYPARK/src/index.js",[],["156","157"],"/Users/christopherlijoodi/Desktop/CITYPARK/src/App.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/SideNavBar.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SideBar/SideMenu.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/LoginDialog.js",["158"],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { makeStyles } from '@mui/styles';\nimport SignIn from './SignIn';\nimport { Link } from 'react-router-dom';\n\nconst useStyle = makeStyles({\n    btn : {\n        color : '#fff'\n    },\n    formlogin : {\n      textAlign : 'center',\n    }\n})\n\nexport default function LoginDialog() {\n    const classes = useStyle();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen} className={classes.btn}>\n        Login\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"LOGIN FORM\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\" className={classes.formlogin}>\n            please fill in details\n            <SignIn />\n            if you dont have an account <Link to='/MotoristForm' onClick={handleClose}> <div style={{color:'blue'}}>register</div> </Link>\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/SignIn.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/MotoristPage.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Home.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Bookings.js",["159","160","161","162","163","164"],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/About.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Support.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/MotoristDetails.js",["165","166","167","168"],"import { Grid, Box } from '@mui/material';\n\n/* import * as areaService from \"../service/areaService\" */\nimport * as MotoristService from '../service/MotoristService'\nimport React, {useState} from \"react\";\nimport Controls from \"../components/controls/Controls\";\nimport { UseForm, Form } from \"../components/UseForm\";\n\nconst genderItems = [\n  { id: \"male\", title: \"Male\" },\n  { id: \"female\", title: \"Female\" },\n  { id: \"others\", title: \"Others\" },\n];\n\nconst initialFieldValues = {\n  motoristId: 0,\n  motoristFirstName: \"\",\n  motoristLastName: \"\",\n  motoristEmail: \"\",\n  motoristMobile: \"\",\n  motoristGender: \"male\",\n  motoristPassword: \"\",\n};\n\nexport default function MotoristDetails(props) {\n\n\n  const handleSubmit = e =>{\n    e.preventDefault()\n  }\n\n  const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, true);\n  \n\n  return (\n    <Box>\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"First Name\"\n            name=\"motoristFirstName\"\n            value={values.motoristFirstName}\n            onChange={handleInputChange}\n            error={errors.motoristFirstName}\n          />\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Last Name\"\n            name=\"motoristLastName\"\n            value={values.motoristLastName}\n            onChange={handleInputChange}\n            error={errors.motoristLastName}\n          />\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Email\"\n            name=\"motoristEmail\"\n            value={values.motoristEmail}\n            onChange={handleInputChange}\n            error={errors.motoristEmail}\n          />\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Mobile\"\n            name=\"motoristMobile\"\n            value={values.motoristMobile}\n            onChange={handleInputChange}\n            error={errors.motoristMobile}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Controls.RadioGroup\n            variant=\"outlined\"\n            name=\"motoristGender\"\n            label=\"Gender\"\n            color=\"primary\"\n            value={values.motoristGender}\n            genderItems={genderItems}\n            onChange={handleInputChange}\n          />\n          <Controls.Input\n            variant=\"outlined\" \n            label=\"Password\"\n            name=\"motoristPassword\"\n            value={values.motoristPassword}\n            onChange={handleInputChange}\n            error={errors.motoristPassword}\n          />\n\n          <div>\n            <Controls.MuiButton\n            type=\"submit\"\n            text=\"Submit\"\n            />\n            <Controls.MuiButton\n            text=\"reset\"\n            color=\"default\"\n            onClick={resetForm}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n    </Box>\n  );\n}\n",["169","170"],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/severity-pill.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/UseForm.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Controls.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/service/MotoristService.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/BookingTime.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/BookingDate.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Dropdown.js",["171","172"],"import React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nconst Dropdown = () => {\n  const [area, setArea] = React.useState(\"\");\n  const [parklot, setParklot] = React.useState(\"\");\n  /** \"selected\" here is state variable which will hold the\n   * value of currently selected dropdown.\n   */\n  const [selected, setSelected] = React.useState(\"\");\n\n  /** Function that will set different values to state variable\n   * based on which dropdown is selected\n   */\n  const changeSelectOptionHandler = (event) => {\n    setSelected(event.target.value);\n    setArea(event.target.value);\n  };\n\n  const handleChange = (event) => {\n    setParklot(event.target.value);\n  };\n\n  /** Different arrays for different dropdowns */\n  const algorithm = [\n    \"Searching Algorithm\",\n    \"Sorting Algorithm\",\n    \"Graph Algorithm\",\n  ];\n  const language = [\"C++\", \"Java\", \"Python\", \"C#\"];\n  const dataStructure = [\"Arrays\", \"LinkedList\", \"Stack\", \"Queue\"];\n\n  /** Type variable to store different array for different dropdown */\n  let type = null;\n\n  /** This will be used to create set of options that user will see */\n  let options = null;\n\n  /** Setting Type variable according to dropdown */\n  if (selected === \"Algorithm\") {\n    type = algorithm;\n  } else if (selected === \"Language\") {\n    type = language;\n  } else if (selected === \"Data Structure\") {\n    type = dataStructure;\n  }\n\n  /** If \"Type\" is null or undefined then options will be null,\n   * otherwise it will create a options iterable based on our array\n   */\n  if (type) {\n    options = type.map((el) => (<MenuItem key={el} value={el}>{el}</MenuItem>));\n  }\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"dependant-dropdown\">Area</InputLabel>\n        <Select\n          labelId=\"dependant-dropdown\"\n          id=\"dependant-dropdown\"\n          value={area}\n          label=\"Area\"\n          onChange={changeSelectOptionHandler}\n        >\n          <MenuItem value='Choose...'>Choose...</MenuItem>\n          <MenuItem value='Algorithm'>Algorithm</MenuItem>\n          <MenuItem value='Language'>Language</MenuItem>\n          <MenuItem value='Data Structure'>Data Structure</MenuItem>\n        </Select>\n        </FormControl>\n        <FormControl>\n        <InputLabel id=\"dropdown\">Park Lot</InputLabel>\n        <Select\n        labelId=\"dropdown\"\n        id=\"dropdown\"\n        value={parklot}\n        label=\"Parklot\"\n        onChange={handleChange}>{options}</Select>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default Dropdown;\n","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/BasicSelect.js",["173","174","175","176"],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nexport default function BasicSelect(props) {\n  const [car, setCar] = React.useState('');\n\n  const handleChange = (event) => {\n    setCar(event.target.value);\n  };\n\n  const{name, value, label, onChange, error=null, options} = props;\n  return (\n    <Box sx={{ minWidth: 120 }}>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">CarType</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          name={name}\n          value={car}\n          label={label}\n          onChange={handleChange}\n        >\n          <MenuItem value='Saloon'>Saloon</MenuItem>\n          <MenuItem value='Lorry'>Lorry</MenuItem>\n          <MenuItem value='Trailer'>Traller</MenuItem>\n        </Select>\n      </FormControl>\n    </Box>\n  );\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/MuiButton.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/http-common.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/DatePicker.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Checkbox.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/MuiSelect.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/RadioGroup.js",["177"],"import { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup as MuiRadioGroup } from '@mui/material';\nimport React from 'react'\n\nexport default function({genderItems,name,label,value,color,onChange}){\n\n   const content = genderItems.map(\n        (item) => (\n            <FormControlLabel key={item.id} value={item.id} control={<Radio color=\"primary\"/>} label={item.title} />\n        )\n    );\n\n    return(\n        <FormControl>\n            <FormLabel>{label}</FormLabel>\n                <MuiRadioGroup row\n                            name={name}\n                            label={label}\n                            value={value}\n                            color={color}\n                            onChange={onChange}>\n                                {content}\n                </MuiRadioGroup>\n                            \n        </FormControl>\n\n    )\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Input.js",["178"],"import React from 'react'\nimport TextField from '@mui/material/TextField';\n\nexport default function({name, label, value, onChange, error=null, variant}){\n\n    \n\n    return(\n       <TextField \n            variant= {variant}\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...(error && {error: true, helperText:error})}\n       />\n     \n    )\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/Registration.js",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196"],"/*\nimport React from 'react'\nimport Controls from \"../components/controls/Controls\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport { Grid } from '@mui/material';\n\nconst initialFieldValues = {\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    password: \"\"\n   \n  };\n\n\nexport default function Registration() {\n\n    const handleSubmit = e =>{\n        e.preventDefault()\n      }\n      const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, true);\n\n      \n    return (\n        <div>\n            <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"First Name\"\n            name=\"motoristFirstName\"\n            value={values.motoristFirstName}\n            onChange={handleInputChange}\n          />\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Last Name\"\n            name=\"motoristLastName\"\n            value={values.motoristLastName}\n            onChange={handleInputChange}\n          />\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Email\"\n            name=\"motoristEmail\"\n            value={values.motoristEmail}\n            onChange={handleInputChange}\n          />\n          <Controls.Input\n            variant=\"outlined\"\n            label=\"Mobile\"\n            name=\"motoristMobile\"\n            value={values.motoristMobile}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          \n          <Controls.Input\n            variant=\"outlined\" \n            label=\"Password\"\n            name=\"motoristPassword\"\n            value={values.motoristPassword}\n            onChange={handleInputChange}\n          />\n\n          <div>\n            <Controls.MuiButton\n            type=\"submit\"\n            text=\"Submit\"\n            />\n            <Controls.MuiButton\n            text=\"reset\"\n            color=\"default\"\n            onClick={resetForm}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n        </div>\n    )\n}\n*/\n\n\nimport { format } from 'date-fns';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Tooltip,\n    Paper,\n    Grid,\n\n} from '@mui/material';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport React from 'react';\nimport axios from \"axios\";\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\nconst genderItems = [\n    { id: \"male\", title: \"Male\" },\n    { id: \"female\", title: \"Female\" },\n    { id: \"others\", title: \"Others\" },\n];\n\n\n\nconst initialFieldValues = {\n    id: 0,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    gender: \"\",\n    password: \"\"\n\n};\n\nexport default function Registration(props) {\n    const validate =(fieldValues = values) =>{\n        let temp = {...errors}\n        if('firstName' in fieldValues)\n            temp.firstName = fieldValues.firstName?\"\":\"This field is required.\"\n        if('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ?\"\":\"Invalid Email.\"\n        setErrors({\n            ...temp\n        })\n\n        if(fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n\n    const handleSubmit = e =>{\n        e.preventDefault()\n         axios.post(\"http://localhost:8080/apiv1/motorist/save\", values)\n           .then(response => {\n             console.log(response)\n           })\n           .catch(error => {\n             console.log(error)\n           })\n\n    }\n\n    const classes = useStyles();\n    const { values, setValues, resetForm, handleInputChange, errors, setErrors } = UseForm(initialFieldValues, true, validate);\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Avatar /> {/*name*/}\n                    <Form onSubmit={handleSubmit}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"First Name\"\n                                    name=\"firstName\"\n                                    value={values.firstName}\n                                    onChange={handleInputChange}\n                                    error={errors.firstName}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    value={values.lastName}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    value={values.email}\n                                    error={errors.email}\n                                    onChange={handleInputChange}\n                                />\n\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Controls.RadioGroup\n                                    variant=\"outlined\"\n                                    name=\"gender\"\n                                    label=\"Gender\"\n                                    color=\"primary\"\n                                    value={values.gender}\n                                    genderItems={genderItems}\n                                    onChange={handleInputChange}\n                                />\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    value={values.password}\n                                    onChange={handleInputChange}\n                                />\n\n                            </Grid>\n                        </Grid>\n                        <Button variant=\"contained\"\n                                fullWidth\n                                onClick={handleSubmit}\n                        >Submit</Button>\n                    </Form>\n                </Paper>\n            </Box>\n        </>\n    )\n}\n\n\n\n","/Users/christopherlijoodi/Desktop/CITYPARK/src/components/controls/Time.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/ParkingLot.js",["197","198","199","200","201","202","203","204","205"],"import {\n    Box,\n    Button,\n    Card,\n    CardHeader,\n    TableContainer,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    TableSortLabel,\n    Tooltip,\n    Paper,\n    Grid,\n\n} from '@mui/material';\nimport { makeStyles } from \"@mui/styles\";\nimport { UseForm, Form } from \"../components/UseForm\";\nimport Controls from \"../components/controls/Controls\";\nimport Avatar from '@mui/material/Avatar';\nimport React, { useState, useEffect  } from 'react';\nimport ParkingLotService from \"../service/ParkingLotService\";\n\n/*\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SeverityPill from '../components/severity-pill';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n */\n\nconst useStyles = makeStyles({\n    pageContent: {\n        margin: \"40px\",\n        padding: \"24px\",\n    },\n\n});\n\n\n\nconst initialFieldValues = {\n    parkingLotId: 0,\n    parkingRegNo: \"\",\n    parkingLotLocation: \"\",\n    parkingLotName: \"\",\n    totalParkingSpaces: 0,\n\n};\n\n\nexport default function ParkingLot(props) {\n    const [parkDetail, setParkDetail] = useState(initialFieldValues);\n    const [parkLot, setParkLot] = React.useState([]);\n    const [searchLocation, setSearchLocation] = React.useState(\"\");\n    const [currentParkingList, setCurrentParkingList] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n  /*\n\n    const baseURL = \"http://localhost:8080/apiv1/parkingLot/get\";\n    const [selected, setSelected] = React.useState(\"\");\n    const [value, setValue] = React.useState(new Date());\n    const [search, setSearch] = React.useState(\"\");\n    const [parkings, setParkings] = useState([]);\n   */\n\n\n\n    useEffect(() =>{\n        retrieveAllParkingLots();\n    }, []);\n\n    const onChangeSearchLocation = e =>{\n        const searchLocation = e.target.value;\n        setSearchLocation(searchLocation);\n    }\n    \n    const saveParkingLot = () =>{\n        var data ={\n            parkingRegNo: parkDetail.parkingRegNo,\n            parkingLotLocation: parkDetail.parkingLotLocation,\n            parkingLotName: parkDetail.parkingLotName,\n            totalParkingSpaces: parkDetail.totalParkingSpaces,\n        };\n        ParkingLotService.create(data).then(response => {\n            console.log(response)\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n\n   \n\n    const retrieveAllParkingLots = () =>{\n\n        ParkingLotService.getAll().then(response => {\n            setParkLot(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    const refreshList = () =>{\n        retrieveAllParkingLots();\n        setCurrentParkingList(null);\n        setCurrentIndex(-1);\n    }\n\n    const setActiveParkingList = (parking, index) => {\n        setCurrentParkingList(parking);\n        setCurrentIndex(index);\n    };\n\n    const findParkingLotByLocation = () =>{\n\n        ParkingLotService.findByLocation(searchLocation).then(response => {\n            setParkLot(response.data);\n            console.log(response);\n            console.log(setParkLot);\n        })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n\n    const removeParkingLot = () =>{\n        ParkingLotService.removeAll().then(response => {\n            console.log(response.data);\n            refreshList();\n        })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n\n    const handleInputChange = e =>{\n\n        const {name, value} = e.target\n        setParkDetail({\n            ...parkDetail,\n            [name]: value,\n        })\n\n    }\n\n\n\n\n\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <Avatar /> {/*name*/}\n                    <Form onSubmit={saveParkingLot}>\n                        <Grid container>\n                            <Grid item xs={6}>\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking LotReg\"\n                                    name=\"parkingRegNo\"\n                                    value={parkDetail.parkingRegNo}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Location\"\n                                    name=\"parkingLotLocation\"\n                                    value={parkDetail.parkingLotLocation}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Lot name\"\n                                    name=\"parkingLotName\"\n                                    value={parkDetail.parkingLotName}\n                                    onChange={handleInputChange}\n                                />\n\n                                <Controls.Input\n                                    variant=\"outlined\"\n                                    label=\"Parking Lot spaces\"\n                                    name=\"totalParkingSpaces\"\n                                    value={parkDetail.totalParkingSpaces}\n                                    onChange={handleInputChange}\n                                />\n\n                            </Grid>\n\n                            <Button variant=\"contained\"\n                                    fullWidth\n                                    onClick={saveParkingLot}\n                            >Submit</Button>\n\n                        </Grid>\n\n                    </Form>\n                </Paper>\n            </Box>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    '& > :not(style)': {\n                        m: 1,\n                        width: '100%',\n                        height: '100%',\n                    },\n                }}\n            >\n                <Paper elevation={3} className={classes.pageContent}>\n                    <div>\n                    <Controls.Input\n                        variant=\"outlined\"\n                        label=\"Search Parking Lot\"\n                        value={searchLocation}\n                        onChange={onChangeSearchLocation}\n                    />\n                        <Button variant=\"contained\"\n                                onClick={findParkingLotByLocation}>Search</Button>\n                    </div>\n                    <div align=\"right\">\n                    <Button variant=\"contained\"\n                            onClick={retrieveAllParkingLots}>GetAll</Button>\n                    </div>\n                    <TableContainer component={Paper}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Reg no.</TableCell>\n                                    <TableCell align=\"right\">location</TableCell>\n                                    <TableCell align=\"right\">Name</TableCell>\n                                    <TableCell align=\"right\">Total Space</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {parkLot.map((row, index) => (\n                                    <TableRow\n                                        key={index}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell>{row.parkingRegNo}</TableCell>\n                                        <TableCell align=\"right\">{row.parkingLotLocation}</TableCell>\n                                        <TableCell align=\"right\">{row.parkingLotName}</TableCell>\n                                        <TableCell align=\"right\">{row.totalParkingSpaces}</TableCell>\n                                    </TableRow>\n                                ))\n                                }\n\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n\n\n                </Paper>\n            </Box>\n        </>\n    )\n}\n\n\n\n","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/ParkingLotService.js",["206","207"],"import http from \"./http-common\"\n\nconst getAll = () => {\n    return http.get(\"/parkingLot/all\");\n};\n\nconst get = parkinglocation => {\n    return http.get(`/parkingLot/get/${parkinglocation}`);\n};\n\nconst create = data => {\n    return http.post(\"/parkingLot/save\", data);\n};\n\nconst updateAlt = (id, data) => {\n    return http.put(`/parkingLot/update/${id}`, data);\n};\n\nconst update = (data) => {\n    return http.put(`/parkingLot/update`, data);\n};\n\nconst remove = id => {\n    return http.delete(`/parkingLot/${id}`);\n};\n\nconst removeAll = () => {\n    return http.delete(`/parkingLot/all`);\n};\n\nconst findByLocation = location => {\n    return http.get(`/parkingLot/get/${location}`);\n};\n\nexport default {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    findByLocation\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/http-common.js",[],"/Users/christopherlijoodi/Desktop/CITYPARK/src/pages/PTable.js",["208"],"import React, { useMemo, useState, useCallback, useEffect } from 'react';\n\nimport DataTable from 'react-data-table-component';\nimport axios from \"axios\";\n\nexport default function PTable(){\n\n        const [parkLot, setParkLot] = useState([]);\n\n    const retrieveAllParkingLots = () =>{\n\n        axios.get(`http://localhost:8080/apiv1/parkingLot/all`).then(response => {\n            setParkLot(response.data);\n            console.log(response);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n        const [selectedRows, setSelectedRows] = useState([]);\n\n        useEffect(() => {\n\n            console.log('state', selectedRows);\n        }, [selectedRows]);\n\n        const handleButtonClick = () => {\n\n            console.log('clicked');\n        };\n\n        const handleChange = useCallback(state => {\n            setSelectedRows(state.selectedRows);\n        }, []);\n\n        /*\n        private Long parkingLotId;\n    private String parkingRegNo;\n    private String parkingLotLocation;\n    private String parkingLotName;\n    private int totalParkingSpaces;\n         */\n\n        const columns = useMemo(\n            () => [\n                {\n\n                    cell: () => <button onClick={handleButtonClick}>Action</button>,\n                    ignoreRowClick: true,\n                    allowOverflow: true,\n                    button: true,\n                },\n                {\n                    name: 'parkingLotId',\n                    selector: row => row.parkingLotId,\n                    sortable: true,\n                    grow: 2,\n                },\n                {\n                    name: 'parkingRegNo',\n                    selector: row => row.parkingRegNo,\n                    sortable: true,\n                },\n                {\n                    name: 'parkingLotLocation',\n                    selector: row => row.parkingLotLocation,\n                    sortable: true,\n                    right: true,\n                },\n                {\n                    name: 'parkingLotName',\n                    selector: row => row.parkingLotName,\n                    sortable: true,\n                    right: true,\n                },\n                {\n                    name: 'totalParkingSpaces',\n                    selector: row => <row className=\"totalParkingSpaces\"></row>,\n                    sortable: true,\n                    right: true,\n                },\n\n            ],\n            [],\n        );\n\n        return (\n            <DataTable\n                title=\"Desserts\"\n                data={retrieveAllParkingLots}\n                columns={columns}\n                selectableRows\n                onSelectedRowsChange={handleChange}\n            />\n        );\n\n\n}","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/ParkingDetailService.js",["209","210"],"import http from \"./http-common\"\n\nconst getAll = () => {\n    return http.get(\"/parkingdetails/all\");\n};\n\nconst get = numberPlate => {\n    return http.get(`/parkingdetails/get/${numberPlate}`);\n};\n\nconst create = data => {\n    return http.post(\"/parkingdetails/save\", data);\n};\n\nconst updateAlt = (id, data) => {\n    return http.put(`/parkingdetails/update/${id}`, data);\n};\n\nconst update = (data) => {\n    return http.put(`/parkingdetails/update`, data);\n};\n\nconst remove = id => {\n    return http.delete(`/parkingdetails/${id}`);\n};\n\nconst removeAll = () => {\n    return http.delete(`/parkingdetails/all`);\n};\n\n/*\nconst findByLocation = location => {\n    return http.get(`/parkingdetails/get/${location}`);\n};\n */\n\nexport default {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n};","/Users/christopherlijoodi/Desktop/CITYPARK/src/service/DataService.js",["211"],"import http from \"./http-common\"\n\nconst getLocData = () => {\n    return http.get(\"/booking/locdata\");\n};\n\nconst getParkingData = locationName => {\n    return http.get(`/booking/parkingdata/${locationName}`);\n};\n\n\n\nexport default {\n    getLocData,\n    getParkingData,\n};",{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":4,"column":8,"nodeType":"218","messageId":"219","endLine":4,"endColumn":21},{"ruleId":"216","severity":1,"message":"220","line":12,"column":3,"nodeType":"218","messageId":"219","endLine":12,"endColumn":17},{"ruleId":"216","severity":1,"message":"221","line":13,"column":3,"nodeType":"218","messageId":"219","endLine":13,"endColumn":10},{"ruleId":"216","severity":1,"message":"222","line":20,"column":10,"nodeType":"218","messageId":"219","endLine":20,"endColumn":17},{"ruleId":"216","severity":1,"message":"223","line":26,"column":8,"nodeType":"218","messageId":"219","endLine":26,"endColumn":13},{"ruleId":"216","severity":1,"message":"224","line":63,"column":10,"nodeType":"218","messageId":"219","endLine":63,"endColumn":18},{"ruleId":"216","severity":1,"message":"225","line":156,"column":7,"nodeType":"218","messageId":"219","endLine":156,"endColumn":23},{"ruleId":"216","severity":1,"message":"226","line":4,"column":13,"nodeType":"218","messageId":"219","endLine":4,"endColumn":28},{"ruleId":"216","severity":1,"message":"227","line":5,"column":16,"nodeType":"218","messageId":"219","endLine":5,"endColumn":24},{"ruleId":"216","severity":1,"message":"228","line":32,"column":19,"nodeType":"218","messageId":"219","endLine":32,"endColumn":28},{"ruleId":"216","severity":1,"message":"229","line":32,"column":68,"nodeType":"218","messageId":"219","endLine":32,"endColumn":77},{"ruleId":"212","replacedBy":"230"},{"ruleId":"214","replacedBy":"231"},{"ruleId":"216","severity":1,"message":"227","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"232","line":1,"column":27,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},{"ruleId":"216","severity":1,"message":"233","line":15,"column":15,"nodeType":"218","messageId":"219","endLine":15,"endColumn":20},{"ruleId":"216","severity":1,"message":"234","line":15,"column":29,"nodeType":"218","messageId":"219","endLine":15,"endColumn":37},{"ruleId":"216","severity":1,"message":"235","line":15,"column":39,"nodeType":"218","messageId":"219","endLine":15,"endColumn":44},{"ruleId":"216","severity":1,"message":"236","line":15,"column":51,"nodeType":"218","messageId":"219","endLine":15,"endColumn":58},{"ruleId":"237","severity":1,"message":"238","line":4,"column":1,"nodeType":"239","endLine":27,"endColumn":2},{"ruleId":"237","severity":1,"message":"238","line":4,"column":1,"nodeType":"239","endLine":19,"endColumn":2},{"ruleId":"216","severity":1,"message":"240","line":90,"column":10,"nodeType":"218","messageId":"219","endLine":90,"endColumn":16},{"ruleId":"216","severity":1,"message":"241","line":91,"column":16,"nodeType":"218","messageId":"219","endLine":91,"endColumn":20},{"ruleId":"216","severity":1,"message":"242","line":92,"column":8,"nodeType":"218","messageId":"219","endLine":92,"endColumn":24},{"ruleId":"216","severity":1,"message":"243","line":96,"column":5,"nodeType":"218","messageId":"219","endLine":96,"endColumn":9},{"ruleId":"216","severity":1,"message":"244","line":97,"column":5,"nodeType":"218","messageId":"219","endLine":97,"endColumn":15},{"ruleId":"216","severity":1,"message":"245","line":98,"column":5,"nodeType":"218","messageId":"219","endLine":98,"endColumn":10},{"ruleId":"216","severity":1,"message":"246","line":99,"column":5,"nodeType":"218","messageId":"219","endLine":99,"endColumn":14},{"ruleId":"216","severity":1,"message":"247","line":100,"column":5,"nodeType":"218","messageId":"219","endLine":100,"endColumn":14},{"ruleId":"216","severity":1,"message":"248","line":101,"column":5,"nodeType":"218","messageId":"219","endLine":101,"endColumn":14},{"ruleId":"216","severity":1,"message":"249","line":102,"column":5,"nodeType":"218","messageId":"219","endLine":102,"endColumn":13},{"ruleId":"216","severity":1,"message":"220","line":103,"column":5,"nodeType":"218","messageId":"219","endLine":103,"endColumn":19},{"ruleId":"216","severity":1,"message":"221","line":104,"column":5,"nodeType":"218","messageId":"219","endLine":104,"endColumn":12},{"ruleId":"216","severity":1,"message":"250","line":109,"column":8,"nodeType":"218","messageId":"219","endLine":109,"endColumn":22},{"ruleId":"216","severity":1,"message":"251","line":110,"column":8,"nodeType":"218","messageId":"219","endLine":110,"endColumn":20},{"ruleId":"216","severity":1,"message":"252","line":115,"column":8,"nodeType":"218","messageId":"219","endLine":115,"endColumn":14},{"ruleId":"216","severity":1,"message":"253","line":116,"column":8,"nodeType":"218","messageId":"219","endLine":116,"endColumn":19},{"ruleId":"216","severity":1,"message":"228","line":175,"column":21,"nodeType":"218","messageId":"219","endLine":175,"endColumn":30},{"ruleId":"216","severity":1,"message":"254","line":175,"column":32,"nodeType":"218","messageId":"219","endLine":175,"endColumn":41},{"ruleId":"216","severity":1,"message":"243","line":4,"column":5,"nodeType":"218","messageId":"219","endLine":4,"endColumn":9},{"ruleId":"216","severity":1,"message":"244","line":5,"column":5,"nodeType":"218","messageId":"219","endLine":5,"endColumn":15},{"ruleId":"216","severity":1,"message":"220","line":12,"column":5,"nodeType":"218","messageId":"219","endLine":12,"endColumn":19},{"ruleId":"216","severity":1,"message":"221","line":13,"column":5,"nodeType":"218","messageId":"219","endLine":13,"endColumn":12},{"ruleId":"216","severity":1,"message":"222","line":19,"column":10,"nodeType":"218","messageId":"219","endLine":19,"endColumn":17},{"ruleId":"216","severity":1,"message":"255","line":59,"column":12,"nodeType":"218","messageId":"219","endLine":59,"endColumn":30},{"ruleId":"216","severity":1,"message":"256","line":60,"column":12,"nodeType":"218","messageId":"219","endLine":60,"endColumn":24},{"ruleId":"216","severity":1,"message":"257","line":115,"column":11,"nodeType":"218","messageId":"219","endLine":115,"endColumn":31},{"ruleId":"216","severity":1,"message":"258","line":133,"column":11,"nodeType":"218","messageId":"219","endLine":133,"endColumn":27},{"ruleId":"216","severity":1,"message":"259","line":15,"column":7,"nodeType":"218","messageId":"219","endLine":15,"endColumn":16},{"ruleId":"237","severity":1,"message":"260","line":35,"column":1,"nodeType":"239","endLine":43,"endColumn":3},{"ruleId":"216","severity":1,"message":"261","line":8,"column":16,"nodeType":"218","messageId":"219","endLine":8,"endColumn":23},{"ruleId":"216","severity":1,"message":"259","line":15,"column":7,"nodeType":"218","messageId":"219","endLine":15,"endColumn":16},{"ruleId":"237","severity":1,"message":"260","line":37,"column":1,"nodeType":"239","endLine":44,"endColumn":3},{"ruleId":"237","severity":1,"message":"260","line":13,"column":1,"nodeType":"239","endLine":16,"endColumn":3},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'DialogActions' is defined but never used.","Identifier","unusedVar","'TableSortLabel' is defined but never used.","'Tooltip' is defined but never used.","'UseForm' is defined but never used.","'axios' is defined but never used.","'selected' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'MotoristService' is defined but never used.","'useState' is defined but never used.","'setValues' is assigned a value but never used.","'setErrors' is assigned a value but never used.",["262"],["263"],"'useEffect' is defined but never used.","'value' is assigned a value but never used.","'onChange' is assigned a value but never used.","'error' is assigned a value but never used.","'options' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'format' is defined but never used.","'uuid' is defined but never used.","'PerfectScrollbar' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'ArrowRightIcon' is defined but never used.","'SeverityPill' is defined but never used.","'Select' is defined but never used.","'FormControl' is defined but never used.","'resetForm' is assigned a value but never used.","'currentParkingList' is assigned a value but never used.","'currentIndex' is assigned a value but never used.","'setActiveParkingList' is assigned a value but never used.","'removeParkingLot' is assigned a value but never used.","'updateAlt' is assigned a value but never used.","Assign object to a variable before exporting as module default","'parkLot' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]